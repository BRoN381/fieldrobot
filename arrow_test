import numpy as np
import cv2
import serial

ser = serial.Serial('/dev/ttyACM0', 9600)

leftdiff = 0
rightdiff = 0
pixelcount = []
for i in range(640):
    pixelcount.append(0)
motorspeed = ['2'] # 1 = left, 2 = mid, 3 = right
boundary = [0, 0, 0, 0]
arrowcount = [0, 0, 0]
def getContours(imgcontours):
    grey = cv2.cvtColor(imgcontours, cv2.COLOR_BGR2GRAY)
    blur = cv2.GaussianBlur(grey, (5,5), 0)
    edge = cv2.Canny(blur, 100, 255)
    kernel = np.ones((4,4))
    dilate = cv2.dilate(edge, kernel, 1)
    opening = cv2.morphologyEx(dilate, cv2.MORPH_OPEN, kernel)
    contours, hierarchy = cv2.findContours(opening, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
    for i in contours:
        area = cv2.contourArea(i)
        if area > 1500:
            arclen = cv2.arcLength(i, True)
            approx = cv2.approxPolyDP(i, arclen*0.02, True)
            if len(approx) == 7:
                cv2.drawContours(imgcontours, i, -1,(153,204,0), 7)
                x1, y1, w1, h1 = cv2.boundingRect(approx)
                newapp = np.ravel(approx)
                maximum = 0
                secmaximum = 0
                for j in range(0, len(newapp), 2):
                    if newapp[j] > maximum:
                        maximum = newapp[j]
                    elif newapp[j] > secmaximum:
                        secmaximum = newapp[j]
                if abs(maximum - secmaximum) < w1/4:
                    cv2.putText(imgcontours, "left", (x1+w1+10, y1+30), cv2.FONT_HERSHEY_COMPLEX, 0.7, (255,255,153), 2)
                    return 1
                else:
                    cv2.putText(imgcontours, "right", (x1+w1+10, y1+30), cv2.FONT_HERSHEY_COMPLEX, 0.7, (255,255,153), 2)
                    return 2
    return 0

def cupdetect(frame):
    motorspeed.append('2')
    return

cap = cv2.VideoCapture(2)
counter = 0
while True:
    try:
        ret, frame = cap.read()
        imgcontours = frame.copy()

        cupdetect(frame)
        arrowresult = getContours(imgcontours)
        arrowcount.append(arrowresult)
        arrowcount.pop(0)
        contiarrow = 2
        if arrowresult == 1:
            if arrowcount.count(1) > contiarrow:
                arrowstr = '1'
                cv2.putText(imgcontours, "turn left", (10, 480-10), cv2.FONT_HERSHEY_COMPLEX, 0.7, (255, 255, 255), 2)
            else:
                arrowstr = '0'
        elif arrowresult == 2:
            if arrowcount.count(2) > contiarrow:
                arrowstr = '2'
                cv2.putText(imgcontours, "turn right", (10, 480-10), cv2.FONT_HERSHEY_COMPLEX, 0.7, (255, 255, 255), 2)
            else:
                arrowstr = '0'
        else:
            arrowstr = '0'

        print('arrow:', arrowcount)
        serprint = (motorspeed.pop(0)+arrowstr+'\n')
        ser.write(serprint.encode('utf-8'))
        print('serial write:', serprint)

        if cv2.waitKey(1) == ord('q'):
            break
    except KeyboardInterrupt():
        break
cap.release()
cv2.destroyAllWindows()
